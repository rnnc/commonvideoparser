'use strict';var _promise=require('babel-runtime/core-js/promise'),_promise2=_interopRequireDefault(_promise),_moment=require('moment'),_moment2=_interopRequireDefault(_moment),_vimeo=require('vimeo'),_config=require('./config'),_helper=require('./helper');Object.defineProperty(exports,'__esModule',{value:!0});function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const errBuild=(a,b)=>(0,_helper.errorBuild)('Vimeo',a,b),url_regex=(0,_config.parsingRegex)('vimeo'),API_CHECK=a=>{if(!(0,_config.getVimeoApiConfig)())throw errBuild(a,`Vimeo Api Config not set, use 'setVimeoApiConfig'`);return!0},vimeoApi=()=>{const{CLIENT_ID:a,CLIENT_SECRET:b,ACCESS_TOKEN:c}=(0,_config.getVimeoApiConfig)();return new _vimeo.Vimeo(a,b,c)};function parseVideoId(a){const b=url_regex.exec(a);if(b)return b[1];throw errBuild(this.constructor.name,'Failed to parse link')}function videoRequest(a){return new _promise2.default((b,c)=>{vimeoApi().request({path:`videos/${parseVideoId(a)}`},(a,d)=>{a?c(JSON.parse(a.message).error):b(parseVideoInfo(d))})})}function parseVideoInfo(a){const{user:b,name:c,uri:d,duration:e,width:f,height:g,created_time:h,release_time:i}=a;return{name:c,link:a.link,duration:_moment2.default.duration(e,'s').toISOString(),description:a.description,user:b.name,user_link:b.link,created_time:h,release_time:i,dimensions:`${f} x ${g}`,thumbnail:a.pictures.sizes.pop().link.replace('?r=pad','')}}exports.default={setVimeoApiConfig:_config.setVimeoApiConfig,async videoData(a){if(API_CHECK('videoData'),Array.isArray(a)){let b=[];for(const c of a)try{b.push((await videoRequest(c)))}catch(a){b.push({error:a,video:c})}return b}if((0,_helper.stringCheck)(a))return videoRequest(a);throw errBuild('videoData',`Invalid param type, String or String[] expected; got "${typeof a}" instead`)}};